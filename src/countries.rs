use serde::{Deserialize, Serialize};
use std::error::Error;
use strum::EnumIter;

#[derive(Debug, Hash, Eq, PartialEq, Deserialize, Serialize, Clone, EnumIter)]
pub enum CountryCode {
    AFG,
    ALB,
    DZA,
    ASM,
    AND,
    AGO,
    AIA,
    ATA,
    ATG,
    ARG,
    ARM,
    ABW,
    AUS,
    AUT,
    AZE,
    BHS,
    BHR,
    BGD,
    BRB,
    BLR,
    BEL,
    BLZ,
    BEN,
    BMU,
    BTN,
    BOL,
    BIH,
    BWA,
    BRA,
    IOT,
    BRN,
    BGR,
    BFA,
    BDI,
    CPV,
    KHM,
    CMR,
    CAN,
    CYM,
    CAF,
    TCD,
    CHL,
    CHN,
    COL,
    COM,
    COG,
    COD,
    COK,
    CRI,
    CIV,
    HRV,
    CUB,
    CUW,
    CYP,
    CZE,
    DNK,
    DJI,
    DMA,
    DOM,
    ECU,
    EGY,
    SLV,
    GNQ,
    ERI,
    EST,
    SWZ,
    ETH,
    FLK,
    FRO,
    FJI,
    FIN,
    FRA,
    PYF,
    GAB,
    GMB,
    GEO,
    DEU,
    GHA,
    GIB,
    GRC,
    GRL,
    GRD,
    GUM,
    GTM,
    GGY,
    GIN,
    GNB,
    GUY,
    HTI,
    HND,
    HKG,
    HUN,
    ISL,
    IND,
    IDN,
    IRN,
    IRQ,
    IRL,
    IMN,
    ISR,
    ITA,
    JAM,
    JPN,
    JEY,
    JOR,
    KAZ,
    KEN,
    KIR,
    PRK,
    KOR,
    KWT,
    KGZ,
    LAO,
    LVA,
    LBN,
    LSO,
    LBR,
    LBY,
    LIE,
    LTU,
    LUX,
    MAC,
    MDG,
    MWI,
    MYS,
    MDV,
    MLI,
    MLT,
    MHL,
    MRT,
    MUS,
    MEX,
    FSM,
    MDA,
    MCO,
    MNG,
    MNE,
    MSR,
    MAR,
    MOZ,
    MMR,
    NAM,
    NRU,
    NPL,
    NLD,
    NCL,
    NZL,
    NIC,
    NER,
    NGA,
    NIU,
    NFK,
    MKD,
    MNP,
    NOR,
    OMN,
    PAK,
    PLW,
    PSE,
    PAN,
    PNG,
    PRY,
    PER,
    PHL,
    PCN,
    POL,
    PRT,
    PRI,
    QAT,
    ROU,
    RUS,
    RWA,
    BLM,
    SHN,
    KNA,
    LCA,
    MAF,
    SPM,
    VCT,
    WSM,
    SMR,
    STP,
    SAU,
    SEN,
    SRB,
    SYC,
    SLE,
    SGP,
    SXM,
    SVK,
    SVN,
    SLB,
    SOM,
    ZAF,
    SGS,
    SSD,
    ESP,
    LKA,
    SDN,
    SUR,
    SWE,
    CHE,
    SYR,
    TWN,
    TJK,
    TZA,
    THA,
    TLS,
    TGO,
    TON,
    TTO,
    TUN,
    TUR,
    TKM,
    TCA,
    TUV,
    UGA,
    UKR,
    ARE,
    GBR,
    USA,
    URY,
    UZB,
    VUT,
    VAT,
    VEN,
    VNM,
    ESH,
    YEM,
    ZMB,
    ZWE,
}

impl TryFrom<String> for CountryCode {
    type Error = Box<dyn Error>;

    fn try_from(value: String) -> Result<Self, Self::Error> {
        CountryCode::try_from(value.as_str())
    }
}

impl TryFrom<&str> for CountryCode {
    type Error = Box<dyn Error>;

    fn try_from(value: &str) -> Result<Self, Self::Error> {
        use CountryCode::*;

        Ok(match value {
            "AFG" => AFG,
            "ALB" => ALB,
            "DZA" => DZA,
            "ASM" => ASM,
            "AND" => AND,
            "AGO" => AGO,
            "AIA" => AIA,
            "ATA" => ATA,
            "ATG" => ATG,
            "ARG" => ARG,
            "ARM" => ARM,
            "ABW" => ABW,
            "AUS" => AUS,
            "AUT" => AUT,
            "AZE" => AZE,
            "BHS" => BHS,
            "BHR" => BHR,
            "BGD" => BGD,
            "BRB" => BRB,
            "BLR" => BLR,
            "BEL" => BEL,
            "BLZ" => BLZ,
            "BEN" => BEN,
            "BMU" => BMU,
            "BTN" => BTN,
            "BOL" => BOL,
            "BIH" => BIH,
            "BWA" => BWA,
            "BRA" => BRA,
            "IOT" => IOT,
            "BRN" => BRN,
            "BGR" => BGR,
            "BFA" => BFA,
            "BDI" => BDI,
            "CPV" => CPV,
            "KHM" => KHM,
            "CMR" => CMR,
            "CAN" => CAN,
            "CYM" => CYM,
            "CAF" => CAF,
            "TCD" => TCD,
            "CHL" => CHL,
            "CHN" => CHN,
            "COL" => COL,
            "COM" => COM,
            "COG" => COG,
            "COD" => COD,
            "COK" => COK,
            "CRI" => CRI,
            "CIV" => CIV,
            "HRV" => HRV,
            "CUB" => CUB,
            "CUW" => CUW,
            "CYP" => CYP,
            "CZE" => CZE,
            "DNK" => DNK,
            "DJI" => DJI,
            "DMA" => DMA,
            "DOM" => DOM,
            "ECU" => ECU,
            "EGY" => EGY,
            "SLV" => SLV,
            "GNQ" => GNQ,
            "ERI" => ERI,
            "EST" => EST,
            "SWZ" => SWZ,
            "ETH" => ETH,
            "FLK" => FLK,
            "FRO" => FRO,
            "FJI" => FJI,
            "FIN" => FIN,
            "FRA" => FRA,
            "PYF" => PYF,
            "GAB" => GAB,
            "GMB" => GMB,
            "GEO" => GEO,
            "DEU" => DEU,
            "GHA" => GHA,
            "GIB" => GIB,
            "GRC" => GRC,
            "GRL" => GRL,
            "GRD" => GRD,
            "GUM" => GUM,
            "GTM" => GTM,
            "GGY" => GGY,
            "GIN" => GIN,
            "GNB" => GNB,
            "GUY" => GUY,
            "HTI" => HTI,
            "HND" => HND,
            "HKG" => HKG,
            "HUN" => HUN,
            "ISL" => ISL,
            "IND" => IND,
            "IDN" => IDN,
            "IRN" => IRN,
            "IRQ" => IRQ,
            "IRL" => IRL,
            "IMN" => IMN,
            "ISR" => ISR,
            "ITA" => ITA,
            "JAM" => JAM,
            "JPN" => JPN,
            "JEY" => JEY,
            "JOR" => JOR,
            "KAZ" => KAZ,
            "KEN" => KEN,
            "KIR" => KIR,
            "PRK" => PRK,
            "KOR" => KOR,
            "KWT" => KWT,
            "KGZ" => KGZ,
            "LAO" => LAO,
            "LVA" => LVA,
            "LBN" => LBN,
            "LSO" => LSO,
            "LBR" => LBR,
            "LBY" => LBY,
            "LIE" => LIE,
            "LTU" => LTU,
            "LUX" => LUX,
            "MAC" => MAC,
            "MDG" => MDG,
            "MWI" => MWI,
            "MYS" => MYS,
            "MDV" => MDV,
            "MLI" => MLI,
            "MLT" => MLT,
            "MHL" => MHL,
            "MRT" => MRT,
            "MUS" => MUS,
            "MEX" => MEX,
            "FSM" => FSM,
            "MDA" => MDA,
            "MCO" => MCO,
            "MNG" => MNG,
            "MNE" => MNE,
            "MSR" => MSR,
            "MAR" => MAR,
            "MOZ" => MOZ,
            "MMR" => MMR,
            "NAM" => NAM,
            "NRU" => NRU,
            "NPL" => NPL,
            "NLD" => NLD,
            "NCL" => NCL,
            "NZL" => NZL,
            "NIC" => NIC,
            "NER" => NER,
            "NGA" => NGA,
            "NIU" => NIU,
            "NFK" => NFK,
            "MKD" => MKD,
            "MNP" => MNP,
            "NOR" => NOR,
            "OMN" => OMN,
            "PAK" => PAK,
            "PLW" => PLW,
            "PSE" => PSE,
            "PAN" => PAN,
            "PNG" => PNG,
            "PRY" => PRY,
            "PER" => PER,
            "PHL" => PHL,
            "PCN" => PCN,
            "POL" => POL,
            "PRT" => PRT,
            "PRI" => PRI,
            "QAT" => QAT,
            "ROU" => ROU,
            "RUS" => RUS,
            "RWA" => RWA,
            "BLM" => BLM,
            "SHN" => SHN,
            "KNA" => KNA,
            "LCA" => LCA,
            "MAF" => MAF,
            "SPM" => SPM,
            "VCT" => VCT,
            "WSM" => WSM,
            "SMR" => SMR,
            "STP" => STP,
            "SAU" => SAU,
            "SEN" => SEN,
            "SRB" => SRB,
            "SYC" => SYC,
            "SLE" => SLE,
            "SGP" => SGP,
            "SXM" => SXM,
            "SVK" => SVK,
            "SVN" => SVN,
            "SLB" => SLB,
            "SOM" => SOM,
            "ZAF" => ZAF,
            "SGS" => SGS,
            "SSD" => SSD,
            "ESP" => ESP,
            "LKA" => LKA,
            "SDN" => SDN,
            "SUR" => SUR,
            "SWE" => SWE,
            "CHE" => CHE,
            "SYR" => SYR,
            "TWN" => TWN,
            "TJK" => TJK,
            "TZA" => TZA,
            "THA" => THA,
            "TLS" => TLS,
            "TGO" => TGO,
            "TON" => TON,
            "TTO" => TTO,
            "TUN" => TUN,
            "TUR" => TUR,
            "TKM" => TKM,
            "TCA" => TCA,
            "TUV" => TUV,
            "UGA" => UGA,
            "UKR" => UKR,
            "ARE" => ARE,
            "GBR" => GBR,
            "USA" => USA,
            "URY" => URY,
            "UZB" => UZB,
            "VUT" => VUT,
            "VAT" => VAT,
            "VEN" => VEN,
            "VNM" => VNM,
            "ESH" => ESH,
            "YEM" => YEM,
            "ZMB" => ZMB,
            "ZWE" => ZWE,
            _ => return Err(format!("Unknown country code: {}", value).into()),
        })
    }
}

impl CountryCode {
    pub fn country_name(&self) -> &'static str {
        use CountryCode::*;

        match self {
            AFG => "Afghanistan ",
            ALB => "Albania",
            DZA => "Algeria",
            ASM => "American Samoa",
            AND => "Andorra",
            AGO => "Angola",
            AIA => "Anguilla",
            ATA => "Antarctica",
            ATG => "Antigua and Barbuda",
            ARG => "Argentina",
            ARM => "Armenia",
            ABW => "Aruba",
            AUS => "Australia",
            AUT => "Austria",
            AZE => "Azerbaijan",
            BHS => "Bahamas",
            BHR => "Bahrain",
            BGD => "Bangladesh",
            BRB => "Barbados",
            BLR => "Belarus",
            BEL => "Belgium",
            BLZ => "Belize",
            BEN => "Benin",
            BMU => "Bermuda",
            BTN => "Bhutan",
            BOL => "Bolivia",
            BIH => "Bosnia and Herzegovina",
            BWA => "Botswana",
            BRA => "Brazil",
            IOT => "British Indian Ocean Territory",
            BRN => "Brunei Darussalam",
            BGR => "Bulgaria",
            BFA => "Burkina Faso",
            BDI => "Burundi",
            CPV => "Cabo Verde",
            KHM => "Cambodia",
            CMR => "Cameroon",
            CAN => "Canada",
            CYM => "Cayman Islands",
            CAF => "Central African Republic",
            TCD => "Chad",
            CHL => "Chile",
            CHN => "China",
            COL => "Colombia",
            COM => "Comoros",
            COG => "Congo",
            COD => "Congo, Democratic Republic of the",
            COK => "Cook Islands",
            CRI => "Costa Rica",
            CIV => "Côte d'Ivoire",
            HRV => "Croatia",
            CUB => "Cuba",
            CUW => "Curaçao",
            CYP => "Cyprus",
            CZE => "Czechia",
            DNK => "Denmark",
            DJI => "Djibouti",
            DMA => "Dominica",
            DOM => "Dominican Republic",
            ECU => "Ecuador",
            EGY => "Egypt",
            SLV => "El Salvador",
            GNQ => "Equatorial Guinea",
            ERI => "Eritrea",
            EST => "Estonia",
            SWZ => "Eswatini",
            ETH => "Ethiopia",
            FLK => "Falkland Islands",
            FRO => "Faroe Islands",
            FJI => "Fiji",
            FIN => "Finland",
            FRA => "France",
            PYF => "French Polynesia",
            GAB => "Gabon",
            GMB => "Gambia",
            GEO => "Georgia",
            DEU => "Germany",
            GHA => "Ghana",
            GIB => "Gibraltar",
            GRC => "Greece",
            GRL => "Greenland",
            GRD => "Grenada",
            GUM => "Guam",
            GTM => "Guatemala",
            GGY => "Guernsey",
            GIN => "Guinea",
            GNB => "Guinea-Bissau",
            GUY => "Guyana",
            HTI => "Haiti",
            HND => "Honduras",
            HKG => "Hong Kong",
            HUN => "Hungary",
            ISL => "Iceland",
            IND => "India",
            IDN => "Indonesia",
            IRN => "Iran",
            IRQ => "Iraq",
            IRL => "Ireland",
            IMN => "Isle of Man",
            ISR => "Israel",
            ITA => "Italy",
            JAM => "Jamaica",
            JPN => "Japan",
            JEY => "Jersey",
            JOR => "Jordan",
            KAZ => "Kazakhstan",
            KEN => "Kenya",
            KIR => "Kiribati",
            PRK => "Korea, Democratic People's Republic of",
            KOR => "Korea, Republic of",
            KWT => "Kuwait",
            KGZ => "Kyrgyzstan",
            LAO => "Lao People's Democratic Republic",
            LVA => "Latvia",
            LBN => "Lebanon",
            LSO => "Lesotho",
            LBR => "Liberia",
            LBY => "Libya",
            LIE => "Liechtenstein",
            LTU => "Lithuania",
            LUX => "Luxembourg",
            MAC => "Macao",
            MDG => "Madagascar",
            MWI => "Malawi",
            MYS => "Malaysia",
            MDV => "Maldives",
            MLI => "Mali",
            MLT => "Malta",
            MHL => "Marshall Islands",
            MRT => "Mauritania",
            MUS => "Mauritius",
            MEX => "Mexico",
            FSM => "Micronesia",
            MDA => "Moldova",
            MCO => "Monaco",
            MNG => "Mongolia",
            MNE => "Montenegro",
            MSR => "Montserrat",
            MAR => "Morocco",
            MOZ => "Mozambique",
            MMR => "Myanmar",
            NAM => "Namibia",
            NRU => "Nauru",
            NPL => "Nepal",
            NLD => "Netherlands",
            NCL => "New Caledonia",
            NZL => "New Zealand",
            NIC => "Nicaragua",
            NER => "Niger",
            NGA => "Nigeria",
            NIU => "Niue",
            NFK => "Norfolk Island",
            MKD => "North Macedonia",
            MNP => "Northern Mariana Islands",
            NOR => "Norway",
            OMN => "Oman",
            PAK => "Pakistan",
            PLW => "Palau",
            PSE => "Palestine, State of",
            PAN => "Panama",
            PNG => "Papua New Guinea",
            PRY => "Paraguay",
            PER => "Peru",
            PHL => "Philippines",
            PCN => "Pitcairn",
            POL => "Poland",
            PRT => "Portugal",
            PRI => "Puerto Rico",
            QAT => "Qatar",
            ROU => "Romania",
            RUS => "Russian Federation",
            RWA => "Rwanda",
            BLM => "Saint Barthélemy",
            SHN => "Saint Helena, Ascension and Tristan da Cunha",
            KNA => "Saint Kitts and Nevis",
            LCA => "Saint Lucia",
            MAF => "Saint Martin",
            SPM => "Saint Pierre and Miquelon",
            VCT => "Saint Vincent and the Grenadines",
            WSM => "Samoa",
            SMR => "San Marino",
            STP => "Sao Tome and Principe",
            SAU => "Saudi Arabia",
            SEN => "Senegal",
            SRB => "Serbia",
            SYC => "Seychelles",
            SLE => "Sierra Leone",
            SGP => "Singapore",
            SXM => "Sint Maarten (Dutch part)",
            SVK => "Slovakia",
            SVN => "Slovenia",
            SLB => "Solomon Islands",
            SOM => "Somalia",
            ZAF => "South Africa",
            SGS => "South Georgia and the South Sandwich Islands",
            SSD => "South Sudan",
            ESP => "Spain",
            LKA => "Sri Lanka",
            SDN => "Sudan",
            SUR => "Suriname",
            SWE => "Sweden",
            CHE => "Switzerland",
            SYR => "Syrian Arab Republic",
            TWN => "Taiwan",
            TJK => "Tajikistan",
            TZA => "Tanzania, United Republic of",
            THA => "Thailand",
            TLS => "Timor-Leste",
            TGO => "Togo",
            TON => "Tonga",
            TTO => "Trinidad and Tobago",
            TUN => "Tunisia",
            TUR => "Turkey",
            TKM => "Turkmenistan",
            TCA => "Turks and Caicos Islands",
            TUV => "Tuvalu",
            UGA => "Uganda",
            UKR => "Ukraine",
            ARE => "United Arab Emirates",
            GBR => "United Kingdom of Great Britain and Northern Ireland",
            USA => "United States of America",
            URY => "Uruguay",
            UZB => "Uzbekistan",
            VUT => "Vanuatu",
            VEN => "Venezuela (Bolivarian Republic of)",
            VNM => "Viet Nam",
            ESH => "Western Sahara",
            YEM => "Yemen",
            ZMB => "Zambia",
            ZWE => "Zimbabwe",
            VAT => "Holy See (Vatican City State)",
        }
    }
}

impl std::fmt::Display for CountryCode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", self.country_name())
    }
}
